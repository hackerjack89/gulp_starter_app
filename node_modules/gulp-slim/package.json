{
  "name": "gulp-slim",
  "description": "slim plugin for gulp",
  "version": "0.1.0",
  "homepage": "https://github.com/cognitom/gulp-slim",
  "repository": {
    "type": "git",
    "url": "git://github.com/cognitom/gulp-slim.git"
  },
  "author": {
    "name": "Tsutomu Kawamura",
    "url": "http://librize.com/"
  },
  "contributors": [
    {
      "name": "Chang Wang",
      "url": "https://github.com/cheapsteak"
    },
    {
      "name": "Dominik Menke",
      "url": "https://github.com/dmke"
    }
  ],
  "main": "./index.js",
  "keywords": [
    "gulpplugin",
    "slim",
    "slim-lang",
    "template"
  ],
  "dependencies": {
    "coffee-script": "^1.9.1",
    "gulp-util": "^3.0.4",
    "spawn-cmd": "0.0.2",
    "through2": "^0.6.3"
  },
  "devDependencies": {
    "gulp": "^3.8.11",
    "gulp-coffee": "^2.3.1",
    "mocha": "^2.2.1",
    "should": "^5.2.0"
  },
  "scripts": {
    "test": "node_modules/.bin/mocha --compilers coffee:coffee-script/register -R spec"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "readme": "# gulp-slim [![Build Status](https://travis-ci.org/cognitom/gulp-slim.svg?branch=master)](https://travis-ci.org/cognitom/gulp-slim)\n\nA [Slim](http://slim-lang.com/) plugin for [gulp](https://github.com/wearefractal/gulp).\n\n## Install\n\nWe need Slim in version 3.0.2 or greater. If you don't have Slim installed,\nplease install Ruby (and RubyGems) first and run\n\n```bash\ngem install slim -v '>= 3.0.2'\n```\n\nIf you already have Slim installed, make sure you are using the latest version:\n\n```bash\ngem update slim\n```\n\nFinally, install `gulp-slim`:\n\n```bash\nnpm install gulp-slim --save-dev\n```\n\n## Usage\n\n```javascript\nvar gulp = require(\"gulp\");\nvar slim = require(\"gulp-slim\");\n\ngulp.task('slim', function(){\n  gulp.src(\"./src/slim/*.slim\")\n    .pipe(slim({\n      pretty: true\n    }))\n    .pipe(gulp.dest(\"./dist/html/\"));\n});\n```\n\nor write it in CoffeeScript.\n\n```coffeescript\ngulp = requier 'gulp'\nslim = require 'gulp-slim'\n\ngulp.task 'slim', ->\n  gulp.src './src/slim/*.slim'\n  .pipe slim pretty: true\n  .pipe gulp.dest './dist/html/'\n```\n\n\n## Options\n\nThe options are the same as what's supported by `slimrb`.\n\n- `pretty: true`\n- `erb: true`\n- `compile: true`\n- `rails: true`\n- `translator: true`\n- `logicLess: true`\n\nSet `bundler: true` to invoke `slimrb` via bundler.\n\nYou can also add [custom options](https://github.com/slim-template/slim/blob/master/README.md#available-options) with ```options``` key. Value can be ```string``` or ```array```.\n\n```javascript\nslim({\n  pretty: true,\n  options: 'attr_quote=\"\\'\"'\n})\n\nslim({\n  pretty: true,\n  options: ['attr_quote=\"\\'\"', 'js_wrapper=:cdata']\n})\n```\n\n\n## Some Scenarios\n\n### With AngularJS\n\nIf you want to compile such a source.\n\n```slim\ndoctype html\nhtml ng-app=\"app\"\n  head\n  body ng-controller=\"YourController as ctrl\"\n    p {{ desc }}\n    p\n      | {{ something }}\n      a ng-href=\"https://github.com/{{ user }}\"\n\n```\n\nYou need to specify a `attr_list_delims`. (or `attr_delims` if you use slimrb previous to 2.1.0)\n\n```javascript\nvar gulp = require(\"gulp\");\nvar slim = require(\"gulp-slim\");\n\ngulp.task('slim', function(){\n  gulp.src(\"./src/slim/*.slim\")\n    .pipe(slim({\n      pretty: true,\n      options: \"attr_list_delims={'(' => ')', '[' => ']'}\"\n    }))\n    .pipe(gulp.dest(\"./dist/html/\"));\n});\n```\n\n\n### With Another Encoding\n\nFor example, if `slimrb`'s default is `US-ASCII` but you want to compile a source in `utf-8`, then use `encoding` option.\n\n```javascript\nvar gulp = require(\"gulp\");\nvar slim = require(\"gulp-slim\");\n\ngulp.task('slim', function(){\n  gulp.src(\"./src/slim/*.slim\")\n    .pipe(slim({\n      pretty: true,\n      options: \"encoding='utf-8'\"\n    }))\n    .pipe(gulp.dest(\"./dist/html/\"));\n});\n\n```\n\n### Passing Data into the Template\n\nSuppose you have the following template:\n\n```slim\ndoctype html\nhtml\n  head\n    title = title\n  body\n    h1 = title\n    ul\n      - for u in users\n        li = u.name\n```\n\nYou can fill in the variables by passing a plain old JavaScript object\nas `data` option into the `slim` plugin:\n\n```javascript\nslim({\n  data: {\n    title: \"Just a list of usernames\",\n    users: [\n      { name: \"Fred\" },\n      { name: \"Bill\" },\n      { name: \"Harry\" }\n    ]\n  }\n})\n```\n\n## Changelog\n\n### 0.1.0\n\nSpecial thanks to [@dmke](https://github.com/dmke) !! See [here](https://github.com/cognitom/gulp-slim/issues/20).\n\n- add `data` option to inject data into the template\n\n### 0.0.11\n\n- add logging of errors and fail if a compile error happens with slimrb\n\n### 0.0.8\n\n- support Windows\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/cognitom/gulp-slim/issues"
  },
  "_id": "gulp-slim@0.1.0",
  "dist": {
    "shasum": "f7940c1d9a9c688bf1adad7cd24faa7cf6b29c9e"
  },
  "_from": "gulp-slim@",
  "_resolved": "https://registry.npmjs.org/gulp-slim/-/gulp-slim-0.1.0.tgz"
}
